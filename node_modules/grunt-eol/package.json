{
  "name": "grunt-eol",
  "description": "Convert line endings the easy way.",
  "version": "0.2.0",
  "homepage": "https://github.com/psyrendust/grunt-eol",
  "author": {
    "name": "Larry Gordon"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:psyrendust/grunt-eol.git"
  },
  "bugs": {
    "url": "https://github.com/psyrendust/grunt-eol/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/psyrendust/grunt-eol/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-copy": "^0.5.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-eol\n\n> Convert line endings the easy way.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-eol --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-eol');\n```\n\n## The \"eol\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `eol` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  eol: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.eol\nType: `String`\nDefault value: `'lf'`\n\nThe line ending you would like to convert to.\n\n#### options.replace\nType: `Boolean`\nDefault value: `false`\n\nIf `true` replace the source file.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to convert the files to `lf` line endings.\n\n```js\ngrunt.initConfig({\n  eol: {\n    default_options: {\n      files: {\n        'tmp/default_options': ['test/fixtures/crlf']\n      }\n    }\n  }\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to convert all files to `crlf`.\n\n```js\ngrunt.initConfig({\n  eol: {\n    to_crlf_all: {\n      options: {\n        eol: 'crlf'\n      },\n      files: [{\n        expand: true,\n        cwd: 'test/fixtures/',\n        src: ['*'],\n        dest: 'tmp/to_crlf_all/'\n      }]\n    }\n  }\n})\n```\n\nIn this example, custom options are used to convert all files to `crlf` with inline file replacement.\n\n```js\ngrunt.initConfig({\n  eol: {\n    to_crlf_replace: {\n      options: {\n        eol: 'crlf',\n        replace: true\n      },\n      files: {\n        src: [\n          './tmp/to_crlf_replace/cr',\n          './tmp/to_crlf_replace/crlf',\n          './tmp/to_crlf_replace/lf'\n        ]\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-eol@0.2.0",
  "dist": {
    "shasum": "079ba5500d4840467a7c6c6ccf7c10222bcfe3a2"
  },
  "_from": "grunt-eol@^0.2.0",
  "_resolved": "https://registry.npmjs.org/grunt-eol/-/grunt-eol-0.2.0.tgz"
}
